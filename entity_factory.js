// Generated by CoffeeScript 1.6.2
(function() {
  var Entity, EntityFactory, EntitySpriteFactory, Factory, Player, TrackingMoveBehavior, UserInputMoveBehavior, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Entity = require("../coffee/entity.coffee").Entity;

  Factory = require("../coffee/factory.coffee").Factory;

  Player = require("../coffee/player.coffee").Player;

  EntitySpriteFactory = require("../coffee/entity_sprite_factory.coffee").EntitySpriteFactory;

  TrackingMoveBehavior = require("../coffee/tracking_move_behavior.coffee").TrackingMoveBehavior;

  UserInputMoveBehavior = require("../coffee/user_input_move_behavior.coffee").UserInputMoveBehavior;

  exports.EntityFactory = EntityFactory = (function(_super) {
    __extends(EntityFactory, _super);

    function EntityFactory() {
      _ref = EntityFactory.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    EntityFactory.create = function(type) {
      return Factory.create(this, type);
    };

    EntityFactory.prototype.creationMethods_ = {
      "player": function() {
        var entity;

        entity = new Player(this.type_);
        entity.setRadius(14);
        entity.setSpeed(200);
        entity.setMoveBehavior(new UserInputMoveBehavior);
        entity.setGraphic(EntitySpriteFactory.create(this.type_));
        return entity;
      },
      "enemy": function() {
        var entity;

        entity = this.createBasicEnemy_();
        entity.setRadius(14);
        entity.setSpeed(150);
        entity.setReactionTime(0);
        return entity;
      },
      "bat": function() {
        var entity;

        entity = this.createBasicEnemy_();
        entity.setRadius(15);
        entity.setSpeed(200);
        entity.setReactionTime(.5754);
        return entity;
      },
      "ogre": function() {
        var entity;

        entity = this.createBasicEnemy_();
        entity.setRadius(21);
        entity.setSpeed(75);
        entity.setReactionTime(.7754);
        return entity;
      },
      "skeleton": function() {
        var entity;

        entity = this.createBasicEnemy_();
        entity.setRadius(16);
        entity.setSpeed(100);
        entity.setReactionTime(.6754);
        return entity;
      },
      "deathknight": function() {
        var entity;

        entity = this.createBasicEnemy_();
        entity.setRadius(18);
        entity.setSpeed(140);
        entity.setReactionTime(.4754);
        return entity;
      },
      "spectre": function() {
        var entity;

        entity = this.createBasicEnemy_();
        entity.setRadius(16);
        entity.setSpeed(225);
        entity.setReactionTime(.1754);
        return entity;
      }
    };

    EntityFactory.prototype.createBasicEnemy_ = function() {
      var entity;

      entity = new Entity(this.type_);
      entity.setMoveBehavior(new TrackingMoveBehavior);
      entity.setGraphic(EntitySpriteFactory.create(this.type_));
      return entity;
    };

    return EntityFactory;

  })(Factory);

}).call(this);

/*
//@ sourceMappingURL=entity_factory.map
*/
